
#The connection username to be passed to our JDBC driver to establish a connection.
username=sa

#The connection password to be passed to our JDBC driver to establish a connection.
password=

#The connection URL to be passed to our JDBC driver to establish a connection.
url=jdbc:hsqldb:file:hsqldb/example.db

#The fully qualified Java class name of the JDBC driver to be used.
driverClassName=org.hsqldb.jdbcDriver

#The connection properties that will be sent to our JDBC driver when establishing new connections. 
#Format of the string must be [propertyName=property;]*
#NOTE - The "user" and "password" properties will be passed explicitly, so they do not need to be included here. 
#connectionProperties=

#The default auto-commit state of connections created by this pool.
defaultAutoCommit=true

#The default read-only state of connections created by this pool. 
#If not set then the setReadOnly method will not be called. 
#(Some drivers don't support read only mode, ex: Informix)
#defaultReadOnly=

#The default TransactionIsolation state of connections created by this pool. 
#One of the following: (see javadoc )
#	 * NONE
#    * READ_COMMITTED
#    * READ_UNCOMMITTED
#    * REPEATABLE_READ
#    * SERIALIZABLE
#defaultTransactionIsolation=

#The default catalog of connections created by this pool.
#defaultCatalog=

#The initial number of connections that are created when the pool is started.Since: 1.2
initialSize=0

#The maximum number of active connections that can be allocated from this pool at 
#the same time, or negative for no limit.
maxActive=8

#The maximum number of connections that can remain idle in the pool, 
#without extra ones being released, or negative for no limit.
maxIdle=8

#The minimum number of connections that can remain idle in the pool, without extra ones being created, 
#or zero to create none.
minIdle=0

#The maximum number of milliseconds that the pool will wait 
#(when there are no available connections) for a connection to be returned before 
#throwing an exception, or -1 to wait indefinitely. 
#maxWait=indefinitely

#The SQL query that will be used to validate connections from this pool before 
#returning them to the caller. If specified, this query MUST be an SQL SELECT statement 
#that returns at least one row.
#validationQuery=

#The indication of whether objects will be validated before being borrowed from 
#the pool. If the object fails to validate, it will be dropped from the pool, 
#and we will attempt to borrow another.
#NOTE - for a true value to have any effect, the validationQuery parameter must 
#be set to a non-null string.
#testOnBorrow=true

#The indication of whether objects will be validated before being returned to the pool.
#NOTE - for a true value to have any effect, the validationQuery parameter must be set to a non-null string.
#testOnReturn=false

#The indication of whether objects will be validated by the idle object evictor (if any). If an object fails 
#to validate, it will be dropped from the pool.
#NOTE - for a true value to have any effect, the validationQuery parameter must be set to a non-null string.
#testWhileIdle=false

#The number of milliseconds to sleep between runs of the idle object evictor thread. 
#When non-positive, no idle object evictor thread will be run.
#timeBetweenEvictionRunsMillis=-1

#The number of objects to examine during each run of the idle object evictor thread (if any).
#numTestsPerEvictionRun=3

#The minimum amount of time an object may sit idle in the pool before it is eligable 
#for eviction by the idle object evictor (if any). 
#minEvictableIdleTimeMillis=1000 * 60 * 30

#Enable prepared statement pooling for this pool.
#poolPreparedStatements=false

#The maximum number of open statements that can be allocated from the statement pool at 
#the same time, or zero for no limit. 
#maxOpenPreparedStatements=unlimited

